	
	<link rel="stylesheet" href="/styles/component/servision.window.css">
	<script type="text/javascript" src="/scripts/component/jquery.servision.window.js"></script>
	<style type="text/css">
		h2,h3 {
			margin: 0;
		}
		.btnWrapper {
			width: 200px ;
			height: 200px;
			position: fixed;
			z-index: 2000;
			top: 200px;
			left: 0;
		}
		.btnWrapper .btn {
			background: #1a5257;
		}
		.layer {
			width: 500px;
			height: auto;
			border: solid 1px #4CCD4C;
		}
		.layer .title {
			height: 30px;
			line-height: 30px;
			padding: 0 10px;
			background-color: #4CCD4C;
		}
		.layer .title span[data-action="close"] {
			display: inline-block;
			float: right;
			font-size: 24px;
		}
		.layer .content {
			background-color: #fff;
			min-height: 100px;
			position: relative;
		}
		.layer .content table {
			width: 100%;
			text-align: center;
		}
		ul {
			margin: 0;
			padding: 0;
			list-style-type: none;
		}
		.clearfix:before,.clearfix:after {
			content: ".";
			display: block;
			height: 0;
			overflow: hidden;
		}
		.clearfix:after {
			clear: both;
		}
		.clearfix {
			zoom:1;
		}
		ul.list li {
	 	width: 200px;
			height: 200px;
			margin-right: 10px;
		 	float: left;
		}
		ul.list li img{
			width: 100%;
			height: 100%;
		}
		.item {
			min-height: 200px;
			margin-bottom: 20px;
		}
		.item .title {
			height: 40px;
			line-height: 40px;
			padding: 0 10px; 
			background: #555d71;
			color: #00D2CA;
			font-size: 16px;
		}
		.item .content {
			padding: 10px 10px 20px;
		}
		.code-wrapper {
			max-height: 300px;
			overflow: auto;
			margin: 0 auto;
			padding: 5px 0;
			border-radius: 8px;
			background: #2d2828;
			color: #fff;
		}
		p {
			margin-top: 1em;
			margin-bottom: 0.5em;
			line-height: 100%;
		}
		.btn-wrapper {
			margin-bottom: 10px;
		}
		.btn {
			min-width: 80px;
			height: 30px;
			line-height: 30px;
			display: inline-block;
			background: #e61d61;
			text-align: center;
			border-radius: 4px;
			box-shadow: 1px 1px 3px #555;
			color: #fff;
			margin: 5px 5px 5px 0;
			padding: 0 10px;
			cursor: pointer;
			*zoom: 1;
			*display: inline;
		}
		.btn:hover {
			background: #2185ac;
		}
		table {
			color: #000;
		}

	</style>

	<div class="wrapper">
		<div id="header">
			<h2>window Demo Display</h2> 
		</div>
		<div class="item">
	
			<div class="content">
				<h4>方式一</h4>
				<p>只需传入需要展示的信息。以这种方式调用时，层打开之前会关闭之前所有打开的层。</p>
				<div class="btn-wrapper">
					<div class="btn btn1">查看效果</div>
				</div>
				<pre class="brush: js;">
					$.window({
					  	message: '按ESC退出'
					})
				</pre>
				<h4>方式二</h4>
				<p>需要传入name属性，name属性唯一。以这种方式创建的层不会对已创建的层有任何的影响。可以创建多个。</p>
				<div class="btn-wrapper">
					<div class="btn btn2">查看效果</div>
				</div>
				<pre class="brush: js;">
					$.window({
					  	name: 'test2',
					  	message: '&lt;div&gt; class="loading"&lt;/div&gt;',
					 	onBeforeOpen: function() {
					  	console.log('弹层test2即将打开');
					  }
					});
				</pre>
				<h4>方式三</h4>
				<p>以这种方式创建全局window，必须传入name。否则创建的是层上弹出的层，会取调用对象的内容当做弹出的信息。</p>
				<div class="btn-wrapper">
					<div class="btn btn3">查看效果</div>
				</div>
				<pre class="brush: js;">
					$('#header').window({
					  	name: 'test3',
					  	onBeforeOpen: function() {
					  	console.log('弹层2即将打开');
					  }
					});
				</pre>
			</div>
		</div>
	</div>
	
	<script type="text/javascript">
		$(document).ready(function() {
			$('.btn1').click(function() {
				$.window({
					message: '按ESC退出',
					css: {
						color: '#fff'
					}
				})
			});
			$('.btn2').click(function() {
				$.window({
				   name: 'test2',
					message: '<div class="loading"></div>',
					onBeforeOpen: function() {
						console.log('弹层test2即将打开');
					}
				});
			})

			$('.btn3').click(function() {
				$('#header').window({
					name: 'test3',
					css: {
						color: '#fff'
					},
					onBeforeOpen: function() {
						console.log('弹层2即将打开');
					}
				});
			});
		})
	</script>